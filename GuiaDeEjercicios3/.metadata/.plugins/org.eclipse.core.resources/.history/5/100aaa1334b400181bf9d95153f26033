class Piloto {

	Nave navePiloto = new Nave();
	Radar radarPiloto = navePiloto.obtenerRadar();

	void salirDeLaBase() {
		navePiloto.despegar();
	}

	void moverSiempreAlNorteRecolectando() {
		
		while(radarPiloto.escanearNorte() != Espectro.DESCONOCIDO){
			moverAlNorte();
			recolectarAlNorte();			
		}
		
	}

	void moverSiempreAlNorteDestruyendo() {
		while(radarPiloto.escanearNorte() != Espectro.DESCONOCIDO){	
			moverAlNorte();
			destruirAlNorte();
		}	
	}

	void moverAlNorte() {
		while (radarPiloto.escanearNorte() == Espectro.VACIO) {
			navePiloto.avanzarAlNorte();
		}
	}

	void destruirAlNorte() {
		while (radarPiloto.escanearNorte() != Espectro.VACIO &&
			   radarPiloto.escanearNorte() != Espectro.DESCONOCIDO) {
			navePiloto.atacarAlNorte();
		}
	}

	void recolectarAlNorte() {
		
		int cantidadTotal = 0;
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR) {

			int cantidadAntimateria = radarPiloto.buscarAlNorte(Sustancia.ANTIMATERIA);
			int cantidadCristal = radarPiloto.buscarAlNorte(Sustancia.CRISTAL);
			int cantidadMetal = radarPiloto.buscarAlNorte(Sustancia.METAL);
			
			cantidadTotal = cantidadAntimateria + cantidadCristal + cantidadMetal;

			recolectarAntimateriaAlNorte(cantidadAntimateria);
			System.out.println("Antimateria: " + cantidadAntimateria);
			System.out.println("Cristal: " + cantidadCristal);
			System.out.println("Metal: " + cantidadCristal);
			recolectarCristalAlNorte(cantidadCristal);
			recolectarMetalAlNorte(cantidadMetal);	
			
		}
		if(radarPiloto.escanearNorte() == Espectro.ASTEROIDE ||
				cantidadTotal == 0){
			destruirAlNorte();
			
		}

	}

	void recolectarAntimateriaAlNorte(int cantidad) {
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR && cantidad > 0) {
			navePiloto.cargarDesdeNorte(Sustancia.ANTIMATERIA, cantidad);
		}
	}

	void recolectarCristalAlNorte(int cantidad) {
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR && cantidad > 0) {
			navePiloto.cargarDesdeNorte(Sustancia.CRISTAL, cantidad);
		}
	}

	void recolectarMetalAlNorte(int cantidad) {
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR && cantidad > 0) {
			navePiloto.cargarDesdeNorte(Sustancia.METAL, cantidad);
		}
	}
}
