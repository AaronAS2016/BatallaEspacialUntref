class Piloto {
	
	
	//Inicializando nave y radar
	Nave navePiloto = new Nave();
	Radar radarPiloto = navePiloto.obtenerRadar();
	Monitor monitorPiloto = navePiloto.obtenerMonitor();
	
	int cantidadTotal = 0; // inicializamos un valor para que entre en el ciclo
	
	void salirDeLaBase() {
		navePiloto.despegar();
	}
	
	
	
	//Mueve la nave siempre al norte mientras recolecta y destruye asteroides
	void moverSiempreAlNorteRecolectando() {
		
		while(radarPiloto.escanearNorte() != Espectro.DESCONOCIDO){
			moverAlNorte();
			recolectarAlNorte();			
		}
		
	}
	
	//Mueve la nave destruyendo todo

	void moverSiempreAlNorteDestruyendo() {
		while(radarPiloto.escanearNorte() != Espectro.DESCONOCIDO){	
			moverAlNorte();
			destruirAlNorte();
		}	
	}

	void moverAlNorte() {
		while (radarPiloto.escanearNorte() == Espectro.VACIO) {
			navePiloto.avanzarAlNorte();
		}
	}

	void destruirAlNorte() {
		while (radarPiloto.escanearNorte() != Espectro.VACIO &&
			   radarPiloto.escanearNorte() != Espectro.DESCONOCIDO) {
			navePiloto.atacarAlNorte();
		}
	}

	void recolectarAlNorte() {
		
		while(cantidadTotal != 0){
			recolectarSustancias();
		}
		
		
	}
	
	void recolectarSustancias(){
		int cantidadAntimateria = radarPiloto.buscarAlNorte(Sustancia.ANTIMATERIA);
		int cantidadCristal = radarPiloto.buscarAlNorte(Sustancia.CRISTAL);
		int cantidadMetal = radarPiloto.buscarAlNorte(Sustancia.METAL);
		
		cantidadTotal = cantidadAntimateria + cantidadCristal + cantidadMetal;

		recolectarAntimateriaAlNorte(cantidadAntimateria);
		System.out.println("Antimateria: " + cantidadAntimateria);
		recolectarCristalAlNorte(cantidadCristal);
		System.out.println("Cristal: " + cantidadCristal);
		recolectarMetalAlNorte(cantidadMetal);	
		System.out.println("Metal: " + cantidadCristal);
	}

	void recolectarAntimateriaAlNorte(int cantidad) {
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR && cantidad > 0) {
			navePiloto.cargarDesdeNorte(Sustancia.ANTIMATERIA, cantidad);
		}
	}

	void recolectarCristalAlNorte(int cantidad) {
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR && cantidad > 0) {
			navePiloto.cargarDesdeNorte(Sustancia.CRISTAL, cantidad);
		}
	}

	void recolectarMetalAlNorte(int cantidad) {
		if (radarPiloto.escanearNorte() == Espectro.CONTENEDOR && cantidad > 0) {
			navePiloto.cargarDesdeNorte(Sustancia.METAL, cantidad);
		}
	}
	
	void descargarAntimateria(){
		if(monitorPiloto.consultarCarga(Sustancia.ANTIMATERIA)>0){
			while(radarPiloto.escanearSur()==Espectro.VACIO){
				navePiloto.avanzarAlSur();
			}
		}
		if(radarPiloto.escanearSur()==Espectro.BASE){
			navePiloto.descargarEnSur(Sustancia.ANTIMATERIA,100) ;
		}
	}
	
	void descargarCristal(){
		if(monitorPiloto.consultarCarga(Sustancia.CRISTAL)>0){
			while(radarPiloto.escanearSur()==Espectro.VACIO){
				navePiloto.avanzarAlSur();
			}
		}
		if(radarPiloto.escanearSur()==Espectro.BASE){
			navePiloto.descargarEnSur(Sustancia.CRISTAL,100) ;
		}
	}
	
	void descargarMetal(){
		if(monitorPiloto.consultarCarga(Sustancia.METAL)>0){
			while(radarPiloto.escanearSur()==Espectro.VACIO){
				navePiloto.avanzarAlSur();
			}
		}
		if(radarPiloto.escanearSur()==Espectro.BASE){
			navePiloto.descargarEnSur(Sustancia.METAL,100) ;
		}
	}
}
